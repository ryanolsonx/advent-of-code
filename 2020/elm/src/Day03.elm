module Day03 exposing (..)

import Aoc
import Array exposing (Array)
import Browser
import Debug exposing (..)
import Html exposing (..)
import Parser exposing (..)



-- MAIN


main =
    let
        inputs =
            getInputs

        results =
            { day = 3
            , examplePart1 = Just (part1 inputs.example)
            , part1 = Just (part1 inputs.real)
            , examplePart2 = Just (part2 inputs.example)
            , part2 = Just (part2 inputs.real)
            }
    in
    Aoc.showResults results



-- SOLVE


type alias State =
    { x : Int
    , y : Int
    , cx : Int
    , cy : Int
    , total : Int
    }


initState : Int -> Int -> State
initState cx cy =
    { x = 0
    , y = 0
    , cx = cx
    , cy = cy
    , total = 0
    }


{-| count all the trees you encounter with a slope
right 3, down 1
-}
part1 : Model -> Int
part1 model =
    part1r model (initState 3 1)


part1r : Model -> State -> Int
part1r model state =
    let
        nextX =
            state.x + state.cx

        nextY =
            state.y + state.cy

        next =
            whatIsAt nextX nextY model
    in
    case next of
        Nothing ->
            state.total

        Just space ->
            case space of
                Tree ->
                    part1r model { state | x = nextX, y = nextY, total = state.total + 1 }

                Open ->
                    part1r model { state | x = nextX, y = nextY }


part2 : Model -> Int
part2 model =
    let
        results =
            [ part1r model (initState 1 1)
            , part1r model (initState 3 1)
            , part1r model (initState 5 1)
            , part1r model (initState 7 1)
            , part1r model (initState 1 2)
            ]
    in
    List.product results


type Square
    = Open
    | Tree


whatIsAt : Int -> Int -> Model -> Maybe Square
whatIsAt x y model =
    model
        |> Array.get y
        |> Maybe.map (getSpace x)
        |> Maybe.map toSquare


getSpace : Int -> Array Char -> Char
getSpace x line =
    let
        wrappedX =
            modBy (Array.length line) x
    in
    Maybe.withDefault '.' (Array.get wrappedX line)


toSquare : Char -> Square
toSquare c =
    if c == '#' then
        Tree

    else
        Open



-- INPUT


type alias Model =
    Array (Array Char)


toModel : List String -> Model
toModel input =
    input
        |> List.map toLine
        |> Array.fromList


toLine : String -> Array Char
toLine line =
    Array.fromList <| String.toList line


type alias Inputs =
    { real : Model
    , example : Model
    }


getInputs : Inputs
getInputs =
    { real = getRealInput |> toModel
    , example = getExampleInput |> toModel
    }


getExampleInput : List String
getExampleInput =
    [ "..##......."
    , "#...#...#.."
    , ".#....#..#."
    , "..#.#...#.#"
    , ".#...##..#."
    , "..#.##....."
    , ".#.#.#....#"
    , ".#........#"
    , "#.##...#..."
    , "#...##....#"
    , ".#..#...#.#"
    ]


getRealInput : List String
getRealInput =
    [ "...#...#....#....##...###....#."
    , "#.#...#...#....#.........#..#.."
    , ".#....##..#.#..##..##.........."
    , ".....#.#.............#..#......"
    , ".......#...#.##.#......#..#.#.."
    , "#.#....#......##........##....."
    , ".....##.#....#..#...#...##...#."
    , "...#...#..#.......#..#...##...#"
    , "..........#...........##......."
    , "..#..#..#...................#.."
    , "#..#....#.....##.#.#..........#"
    , ".#.##.......###.....#.#...#...."
    , ".#..##....##....#.......#...###"
    , "#.#..##...#.#..#..............."
    , ".........#....#.......##.#.#..."
    , "...###...##....##...#..##.#..#."
    , "....#.........#..#...#.......#."
    , "....................#..#.#.#..."
    , "..#....#..........#...........#"
    , ".#.....#..#.....##........##..#"
    , "#..##..#...##............#..##."
    , ".#..##....#..........#..#.##.#."
    , "..#####..#.#............##....."
    , "...###.#....##..#.#....#.....#."
    , ".#.......##....#...#.#.....##.."
    , "...#....#...##.#...#..#........"
    , ".####.....#....#.#.#...#......."
    , "...#....#.....#.......#........"
    , "#..#.#.......#...#............#"
    , "...#.....###.##....#.#.###.#..."
    , ".#.........#.......#.#....##..."
    , "#.#..#...#.#...##......#..#...."
    , ".....#...#..#.#...#..###..#...."
    , "......#.........#...###........"
    , ".....#..##...#..........#.....#"
    , "..#..#.#.##.#...#....#....##..#"
    , "##....#.##...#.##.#..##....#..."
    , ".....#.#.#.#..#....##.#...#.#.."
    , ".....##.......#........#......."
    , "...#.#.....#...#...##.#......##"
    , "........#..#.#...#.#.....#.#..#"
    , "#..##...#.#...##..##...#.#...##"
    , ".##.#.#..#...#.....#.#.##.#...#"
    , ".#.####.........##.........#..#"
    , ".##..............#....#...#...#"
    , "......#...#..#...#..#..###.#..."
    , ".......##...#.#.#..##..#......#"
    , ".....#....#..##..#.........#..."
    , ".....#..#.#.#........#.#.####.."
    , "#..#.......###....##..........."
    , "#..##..........#.#......#.#...."
    , ".....##........#...#..##......."
    , "###...#.##.#.#.#.#.##...##....."
    , "....#...#........##.#.##..##..."
    , ".#..#.#.#......#.......##..#..#"
    , ".#...#.................#....#.."
    , ".##..#..........#..##.......#.."
    , ".#.#.#.....#..#.#.........##..#"
    , "...#......##...#.......#...##.."
    , "##...###....#.###.............#"
    , "#.....#.#..#.#..#........#.#.#."
    , ".....#.#......##..#.#.....#.##."
    , ".......#...........#..#.......#"
    , "..#....#.#.#......#.....#...#.."
    , ".....##........#..##..#..##...."
    , "#.#........#...##....#.#..##..."
    , "#......#......#....#..#...#.##."
    , "....#.#.......#.#.#............"
    , "......####.#.##...#.#.##.....##"
    , "..###.#.#..#.........#.####...."
    , ".#.......#..#.#....#.#..#.#.##."
    , "#....#....#............##...##."
    , "....#....#............#....#..#"
    , "..#........#..#....#..#..#...#."
    , ".#......##....#..........#....#"
    , "#.##.....#..........#.###.#...."
    , "....##...#.....#.#......#.##..."
    , "#.#.....#.......###.###..#..#.#"
    , "..###..##.............#.####.##"
    , "#....#.....#....#..##.......#.."
    , ".....#....#...#.#.#.#..#...#.##"
    , "...#.....#..#....###......#.#.#"
    , "##.........#.#..#..#.#..#.....#"
    , ".#.....#.#....#.........##..#.#"
    , ".#.#..#.###..#..#..........#..."
    , ".##....#.#.#...#......##.....#."
    , "#.#....#....#...#...##...#..#.."
    , "#...#........#....#....#......#"
    , "#......#...#..#.#.##.....##..#."
    , "....#...#......##...#..#....#.."
    , ".#......##.##.......#.......#.."
    , ".#...#..####...........#.#.#..."
    , ".........#...#.#.........#....."
    , "#.##.....#.#..#.#.###...###..#."
    , "#...##.###......#.###..##.#.##."
    , "...##.#.....#....#..#......#..."
    , "#....###.#..#...##.....#......#"
    , "........###...#...#............"
    , "........#....#...#...#....#...#"
    , "#....#..#..#....#.#........#.#."
    , "##...#.....#.#..........#..#..#"
    , "#.#...##.....#........#...#...#"
    , "##.#.#.......#...#..#.###....#."
    , ".#.......#....##..##...#.....#."
    , "#....#....#.....#.......#......"
    , ".##.##.##...##...#.#.#..#..#..."
    , "#..#..#.##....#......##....###."
    , ".......#.#.........#..##.#...##"
    , ".#..##...#....#.....#.........."
    , "..#.#...#......#.#..#.........."
    , ".##....#.#.#.##.......###...#.."
    , "..##.#...#.#.#.#.......#..#...."
    , "#..#.......#...#........#.....#"
    , ".....#.......#......###..#....."
    , "...##.#.......#.....##.....##.."
    , "##..#.......#.#.....#....#....."
    , "..#....#.##.##...#...#......#.."
    , ".#..#.###.#....###........#...#"
    , "....##.##...##..#..#.#....#...."
    , "..###...##.....##.............."
    , "#....#...##...#....#..........#"
    , ".##........#......##...##...#.#"
    , "..#.#.##..........#......#....."
    , "...#...#.........#.##........##"
    , "..#.#..#.#..#...#....#...#....."
    , "...##...#..#.###.#..#.#...#...."
    , "....###........#..#..##...#...."
    , "#.#....##.......#.#........#..."
    , ".###...#..#.#.#.#..#...#..##.##"
    , "..#.........#####.#......#..#.."
    , "#.....#.....##..#....#...#...#."
    , "...#..#....##....##.....##.#..."
    , ".........#............#.##....."
    , "....##.#..#....#.##.......#..##"
    , ".###....#.#..#......#.#.......#"
    , ".###...###.#.........#.#..#...#"
    , ".....#........#..#.#..#.#..##.#"
    , ".###..#....##.........#..##...."
    , "..#.......#..#..##...#.###.#..."
    , "#.......#...........#.#...#.###"
    , "#.##.##...##.#...##..#.....#..."
    , "..#..#........###.#.....##....."
    , "#.....##....#...##...####..#..#"
    , "....#........#...#...#........."
    , "......#.#.#.#.......#..#.....##"
    , "..#..#....#.....#.#...##......#"
    , "..#....#...#.###.........#.###."
    , "...#......##..#.#.....#...#...."
    , "...#.......#...#...#........##."
    , "............#...#..#....#.....#"
    , "....##......................#.."
    , "#.#.#....#....#..........##...."
    , "#.#.....#.#.##..#...#.##....##."
    , "...#...#..#...#..#.#.#.......#."
    , "#.....#..........#.........##.#"
    , "#...##..#..#.#.......###....#.."
    , ".#...#..##....#.....##.......#."
    , "....#.##.....#.........#.#....#"
    , "........#.#...####..#.......#.#"
    , ".####...#.#......####.....#.##."
    , "###..#....#..#.......#.#..##..#"
    , "#......#.#....##..#.##.#....#.#"
    , "...###...#...#..##.#..#..#.#..."
    , "...##..##....#..#.....#........"
    , ".....#..............#......#..#"
    , "......#....#......#..#........."
    , "#..#.....#.##...........##....."
    , ".#..#.#..................##...."
    , "#.#..#..##...#....#.#......#..."
    , ".##.#.##......#.##...#...#...#."
    , "..#...#.........#.#..#.#....#.."
    , ".#.####.#..#.#......##.#..#...."
    , "#..#.......#....#.............."
    , "....#............#..#.........."
    , ".....#####.....#.....#..##...##"
    , "#.#....#.#...............#..##."
    , ".#.#..#...#......#.....#.#.#..."
    , ".#....#.#.#......#.....##....#."
    , "....#....#.##..#.......###...##"
    , ".....#..#.##...#...#...#..#.#.."
    , "##..#........#.#..#..##......#."
    , ".#..#..##.......#..#.....#....."
    , ".#.#.....###..##.#.#..........."
    , "..##..##.####..........#..#...."
    , "..##..#..#...#....#......#.#..."
    , "#...#.#......##.....##.#..###.."
    , "#..#..............#........##.#"
    , ".........#.##..#.#..#..##.##.#."
    , "#....##....#.#..#.#...##..#...."
    , ".#....#.......#............##.."
    , ".......#.#.......#...#.#......#"
    , "......##...#.......#.#........#"
    , "..###..#.#.##....##...#....##.."
    , "..##.##..........##..###......."
    , ".#.#.#..#..#.#.......#.#...##.."
    , "..#..##.........#.###..#......#"
    , "....#.#.#...##.#...#...##..###."
    , "..###..##.........##...#...#..#"
    , ".#..##...#.......#.......#..#.#"
    , "........##....##....#.#.###.#.#"
    , "#.....#.#.................#.#.."
    , "....#.#.#.....##.####.#......#."
    , "....#.......#.#.##.##.........."
    , "...#...........#...#.##...#.###"
    , "#....#....#..........#.##......"
    , "##..#...........##.....##.##..."
    , ".#.##...##..##....#..#.....####"
    , "#...#...#.##..........##..##..."
    , "....##..#....#.....#.#...#....#"
    , "..#....#..##...###.#.#........."
    , "#......#.#.#...#...#.........#."
    , "#............###.#.#.#..##...#."
    , ".##.....####...##..##..#..##.#."
    , "#..#........#.....#.#.....#...#"
    , "#............#....#.#.#........"
    , "......##...##.#....#.....#...#."
    , "..#........##......#.#.....##.."
    , ".#..#..#.....##.......#..#.#..#"
    , ".#....#..#....##.#.#.#..#..#.##"
    , ".####.#..........#...#..##....."
    , "...###..###...##..#............"
    , "#..#.....##.#...#..##..#......."
    , ".....##....#...###.##...#......"
    , "...##..#...#..#..##....##....#."
    , "...###....#.###.#.#.##....#...."
    , "##.#.#.....#....#.#....#..#...."
    , ".......##.....#.#..##...##...#."
    , ".#....#.#...##.#..#....#.....#."
    , "..#...#..#...#.##........#...#."
    , "#....#......##.#....##...#.#..#"
    , ".....#..#..#..#......#...#.#.#."
    , "..###....#........#...#.......#"
    , "###...#.......#.#.......##.##.."
    , "......##.....#.#........#....#."
    , "#.##..#.#.#.#..#....#.##.....#."
    , "..........#.##.#...#...#..#..#."
    , "..#...##.#..........#..##.###.."
    , "..###..##.##..#.#...##.####..#."
    , "#.#.#...............##....###.#"
    , "....#.........#.#....#.#....#.#"
    , "..#...#.###...#....###.....#..."
    , "..#..#....#...#............#..."
    , ".#..#....#..##.....##.........."
    , "..#....#.#...#.#.#.#.......##.#"
    , ".........#....##........#.#...."
    , "...#..##.#..#.##...#...#.#....#"
    , "....####...#...####.#....###..#"
    , "......##...#.##.#.......#..#..."
    , "#.#...#.#...#.#...#....#.#.#..."
    , ".#.....##...#.....###.#....#..."
    , "......##.....###...#.#...#.#..."
    , "#..#..##.#.#......#....#..#..#."
    , "....#.###.....#..#...#.##.....#"
    , "##.##........#......#....#..##."
    , "##.....##.#.....#.....##.....#."
    , ".....#.##...#.#..#.#.#.....#..."
    , ".#.##..#...#.#..#.....#.#......"
    , ".....##.......#..#...##..#..#.."
    , "#.....#..#.####......#........#"
    , ".#..#..##.#..##............#..#"
    , ".##..#.#....##.##.....#......#."
    , ".......##.........#..#........."
    , ".#...#.......................#."
    , "#......#.#....##.#.......#..#.."
    , "..##..##......#.......#....#.#."
    , "##......#......##...##........."
    , "..#....####....#.#.....##.#.#.."
    , "..........#..#.#.#.....#..#.#.."
    , "##..##...........##.......#...."
    , "##....#.#....#..#......###....#"
    , "...#.#.#..#.......##.......#..."
    , "#....#.......#.......#........."
    , "...##......##....#...#......#.#"
    , "#......#####.#.........#.....#."
    , "#..#.............#..#....#...#."
    , ".......#.##..#..#..#..#....####"
    , "......#.##..##..........###...#"
    , ".#.##....###..#........#....##."
    , "#......#..#...###.#...#.....#.."
    , ".#.#.......#....##.......#.#..."
    , "..#.##..#..##.....#.........#.#"
    , "#.#...#..#.##....#.......##...."
    , ".#.....###....#.#..#...#.....#."
    , "#...#..#.......#.#.....##...#.#"
    , "#.#####.........#....##.....#.."
    , "#....#..##...#....#.##.......#."
    , ".#.#.........##....##....#....."
    , "...#..##.......#....#.#.#......"
    , "#.###.##...###....#.....#.####."
    , ".#...#.#.#..##.#..........#...."
    , "#.#.....#.##.#..####.....##.#.."
    , "...###.##..####.......#......##"
    , ".##..#.........#...#.#.....#.##"
    , "..#.....##....###.....#.#...##."
    , "#....#....#..#....#.##........."
    , "......###....#.#..#..#....##..."
    , ".#.#................#.......##."
    , "...#.......#.........#.#......."
    , "...#..........#...##.....###..."
    , "....#......#...#..............."
    , ".##...#....#.....#.##......#..."
    , ".#.....###...##..##...#.#......"
    , "....##........#.....#...#....#."
    , "#.........#.#...##...#.#..#...."
    , "...#.#.....#.#........#.#....#."
    , ".#........#.....#.#.#.#.#..#..."
    , "....#...#.....#.#....#........#"
    , "..###.#....#.#....##...##..#.##"
    , ".#....#.#.####.#.#.....#......."
    , ".#...#...#.................##.#"
    , "..................##..#..#.#.#."
    , ".#..#............##....###....."
    , ".......#....#...........#......"
    , "....#.#.#.....###.........#..##"
    , "...#.#....#.#.##.#.##.....##..#"
    , ".#.##.#...##...#.......#.....##"
    , ".#............#...#..##...#.#.#"
    , "#.##..#.##..#..##.###.#........"
    , "..............##....#...#..#.#."
    , ".#.#...#.#....#....###........#"
    , ".#....#.#....#......###........"
    , "..#.......##......#.##.....#..."
    , ".....#......#..#...#.#.....#..."
    ]
